{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["//middleware.ts\nimport { NextResponse } from \"next/server\";\nimport { withAuth } from \"next-auth/middleware\";\n\nexport default withAuth(\n  async function middleware(req) {\n    console.log(\"Request path:\", req.nextUrl.pathname);\n\n    if (!req.nextUrl.origin) {\n      console.error(\"Request origin is missing\");\n      return NextResponse.json({ error: \"Request origin is missing\" }, { status: 400 });\n    }\n\n    // تجاهل طلبات API والملفات الثابتة\n    if (\n      req.nextUrl.pathname.startsWith(\"/api\") ||\n      req.nextUrl.pathname.startsWith(\"/_next\") ||\n      req.nextUrl.pathname.includes(\".\")\n    ) {\n      console.log(\"Request is for API or static file, continuing...\");\n      return NextResponse.next();\n    }\n\n    // التحقق من الحاجة للإعداد فقط للمسارات غير العامة\n    if (![\"/setup\", \"/login\", \"/register\"].includes(req.nextUrl.pathname)) {\n      try {\n        console.log(\"Checking setup status...\");\n        const setupCheck = await fetch(\n          new URL(\"/api/auth/setup\", req.nextUrl.origin)\n        );\n        const { setupRequired } = await setupCheck.json();\n        console.log(\"Setup required:\", setupRequired);\n\n        if (setupRequired && req.nextUrl.pathname !== \"/setup\") {\n          console.log(\"Redirecting to /setup...\");\n          return NextResponse.redirect(new URL(\"/setup\", req.nextUrl.origin));\n        }\n      } catch (error) {\n        console.error(\"Setup check failed:\", error);\n      }\n    }\n\n    // لا تقم بإعادة التوجيه إلى صفحة login حتى لو كان هناك مستخدم ADMIN\n    if (req.nextUrl.pathname === \"/setup\") {\n      console.log(\"Allowing access to /setup...\");\n      return NextResponse.next(); // إبقاء المستخدم في صفحة setup\n    }\n\n    // Restrict access to dashboard for admins only\n    if (req.nextUrl.pathname.startsWith(\"/dashboard\")) {\n      const token = req.cookies.get(\"next-auth.session-token\")?.value; // Access the value property of the cookie\n\n      if (!token) {\n        console.log(\"No token found, redirecting to login...\");\n        return NextResponse.redirect(new URL(\"/login\", req.nextUrl.origin));\n      }\n\n      try {\n        const user = JSON.parse(atob(token.split(\".\")[1])); // Decode JWT payload\n\n        // Check if the user exists in the database\n        const userExists = await fetch(\n          new URL(\"/api/users/admins\", req.nextUrl.origin),\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email: user.email }),\n          }\n        ).then((res) => res.json());\n\n        if (!userExists.exists) {\n          console.log(\n            \"User does not exist in the database, redirecting to login...\"\n          );\n          return NextResponse.redirect(new URL(\"/login\", req.nextUrl.origin));\n        }\n\n        if (user.role !== \"ADMIN\") {\n          console.log(\"User is not an admin, redirecting to login...\");\n          return NextResponse.redirect(new URL(\"/login\", req.nextUrl.origin));\n        }\n      } catch (error) {\n        console.error(\"Failed to decode token or check user existence:\", error);\n        return NextResponse.redirect(new URL(\"/login\", req.nextUrl.origin));\n      }\n    }\n\n    console.log(\"Proceeding to next page...\");\n    return NextResponse.next();\n  },\n  {\n    callbacks: {\n      authorized: ({ token }) => !!token,\n    },\n    pages: {\n      signIn: \"/login\",\n      error: \"/login\",\n    },\n  }\n);\n\nexport const config = {\n  matcher: [\"/((?!api|_next/static|_next/image|favicon.ico).*)\"],\n};\n"],"names":[],"mappings":"AAAA,eAAe;;;;;AACf;AAAA;AACA;;;uCAEe,CAAA,GAAA,kJAAA,CAAA,WAAQ,AAAD,EACpB,eAAe,WAAW,GAAG;IAC3B,QAAQ,GAAG,CAAC,iBAAiB,IAAI,OAAO,CAAC,QAAQ;IAEjD,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,EAAE;QACvB,QAAQ,KAAK,CAAC;QACd,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;IAEA,mCAAmC;IACnC,IACE,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,WAChC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAChC,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAC9B;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,mDAAmD;IACnD,IAAI,CAAC;QAAC;QAAU;QAAU;KAAY,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,GAAG;QACrE,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,MAAM,aAAa,MAAM,MACvB,IAAI,IAAI,mBAAmB,IAAI,OAAO,CAAC,MAAM;YAE/C,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,WAAW,IAAI;YAC/C,QAAQ,GAAG,CAAC,mBAAmB;YAE/B,IAAI,iBAAiB,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;gBACtD,QAAQ,GAAG,CAAC;gBACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM;YACnE;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;QACvC;IACF;IAEA,oEAAoE;IACpE,IAAI,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU;QACrC,QAAQ,GAAG,CAAC;QACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,IAAI,+BAA+B;IAC7D;IAEA,+CAA+C;IAC/C,IAAI,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,eAAe;QACjD,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,4BAA4B,OAAO,0CAA0C;QAE3G,IAAI,CAAC,OAAO;YACV,QAAQ,GAAG,CAAC;YACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM;QACnE;QAEA,IAAI;YACF,MAAM,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,qBAAqB;YAEzE,2CAA2C;YAC3C,MAAM,aAAa,MAAM,MACvB,IAAI,IAAI,qBAAqB,IAAI,OAAO,CAAC,MAAM,GAC/C;gBACE,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,OAAO,KAAK,KAAK;gBAAC;YAC3C,GACA,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;YAExB,IAAI,CAAC,WAAW,MAAM,EAAE;gBACtB,QAAQ,GAAG,CACT;gBAEF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM;YACnE;YAEA,IAAI,KAAK,IAAI,KAAK,SAAS;gBACzB,QAAQ,GAAG,CAAC;gBACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM;YACnE;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mDAAmD;YACjE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,OAAO,CAAC,MAAM;QACnE;IACF;IAEA,QAAQ,GAAG,CAAC;IACZ,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B,GACA;IACE,WAAW;QACT,YAAY,CAAC,EAAE,KAAK,EAAE,GAAK,CAAC,CAAC;IAC/B;IACA,OAAO;QACL,QAAQ;QACR,OAAO;IACT;AACF;AAGK,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}}]
}