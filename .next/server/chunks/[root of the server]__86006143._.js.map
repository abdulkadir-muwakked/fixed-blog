{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/db/index.ts"],"sourcesContent":["/**\n * @File: src/lib/db/index.ts\n */\n\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport async function fetchCategories() {\n  console.log(\"Fetching categories from database...\");\n  const result = await prisma.category.findMany();\n  console.log(\"Fetched categories:\", result);\n  return result;\n}\n\nexport async function testPostTable() {\n  try {\n    console.log(\"Testing posts table...\");\n    const result = await prisma.post.findMany();\n    console.log(\"Posts table data:\", result);\n  } catch (error) {\n    console.error(\"Error querying posts table:\", error);\n  }\n}\n\nexport async function verifyPostTable() {\n  try {\n    console.log(\"Verifying posts table...\");\n    const result = await prisma.post.findMany();\n    console.log(\"Posts table data:\", result);\n  } catch (error) {\n    console.error(\"Error querying posts table:\", error);\n  }\n}\n\nexport default prisma;\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;AAED;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe;IACpB,QAAQ,GAAG,CAAC;IACZ,MAAM,SAAS,MAAM,OAAO,QAAQ,CAAC,QAAQ;IAC7C,QAAQ,GAAG,CAAC,uBAAuB;IACnC,OAAO;AACT;AAEO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,SAAS,MAAM,OAAO,IAAI,CAAC,QAAQ;QACzC,QAAQ,GAAG,CAAC,qBAAqB;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;IAC/C;AACF;AAEO,eAAe;IACpB,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,SAAS,MAAM,OAAO,IAAI,CAAC,QAAQ;QACzC,QAAQ,GAAG,CAAC,qBAAqB;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;IAC/C;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/db/schema.ts"],"sourcesContent":["/**\n * @File: src/lib/db/schema.ts\n */\n\n// Prisma schema definitions are now managed in the `prisma/schema.prisma` file.\n// Removed Drizzle-based schema definitions and relationships.\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,gFAAgF;AAChF,8DAA8D","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/utils.ts"],"sourcesContent":["/**\n * @File: src/lib/utils.ts\n */\n\n//src/lib/utils\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport { customAlphabet } from \"nanoid\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Create a custom ID generator with nanoid\nexport const createId = customAlphabet(\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  12\n);\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,eAAe;;;;;AACf;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,MAAM,WAAW,CAAA,GAAA,iJAAA,CAAA,iBAAc,AAAD,EACnC,kEACA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/auth/drizzle-adapter.ts"],"sourcesContent":["/**\n * @File: src/lib/auth/drizzle-adapter.ts\n */\n\nimport { and, eq } from \"drizzle-orm\";\nimport type { Adapter, AdapterAccount, AdapterSession, AdapterUser, VerificationToken } from \"next-auth/adapters\";\nimport { db } from \"@/lib/db\"; // تأكد من استخدام المسار الصحيح\nimport { accounts, sessions, users, verificationTokens } from \"@/lib/db/schema\";\nimport { createId } from \"@/lib/utils\";\n\nexport function DrizzleAdapter(client: typeof db): Adapter {\n  return {\n    async createUser(userData: Omit<AdapterUser, \"id\">): Promise<AdapterUser> {\n      const id = createId();\n      await client.insert(users).values({\n        id,\n        email: userData.email,\n        emailVerified: userData.emailVerified,\n        name: userData.name,\n        image: userData.image,\n      });\n\n      const [user] = await client\n        .select()\n        .from(users)\n        .where(eq(users.id, id))\n        .limit(1);\n\n      return user;\n    },\n\n    async getUser(id: string): Promise<AdapterUser | null> {\n      const user = await db\n        .select()\n        .from(users)\n        .where(eq(users.id, id))\n        .then((res) => res[0] || null);\n\n      return user;\n    },\n\n    async getUserByEmail(email: string): Promise<AdapterUser | null> {\n      const user = await db\n        .select()\n        .from(users)\n        .where(eq(users.email, email))\n        .then((res) => res[0] || null);\n\n      return user;\n    },\n\n    async getUserByAccount({ providerAccountId, provider }: { providerAccountId: string; provider: string }): Promise<AdapterUser | null> {\n      const account = await db\n        .select()\n        .from(accounts)\n        .where(\n          and(\n            eq(accounts.providerAccountId, providerAccountId),\n            eq(accounts.provider, provider)\n          )\n        )\n        .then((res) => res[0]);\n\n      if (!account) {\n        return null;\n      }\n\n      const user = await db\n        .select()\n        .from(users)\n        .where(eq(users.id, account.userId))\n        .then((res) => res[0]);\n\n      return user || null;\n    },\n\n    async updateUser(user: Partial<AdapterUser> & { id: string }): Promise<AdapterUser> {\n      await db\n        .update(users)\n        .set({\n          name: user.name,\n          email: user.email,\n          image: user.image,\n          emailVerified: user.emailVerified,\n        })\n        .where(eq(users.id, user.id));\n\n      const updatedUser = await db\n        .select()\n        .from(users)\n        .where(eq(users.id, user.id))\n        .then((res) => res[0]);\n\n      return updatedUser;\n    },\n\n    async deleteUser(userId: string): Promise<void> {\n      await db.delete(users).where(eq(users.id, userId));\n    },\n\n    async linkAccount(account: AdapterAccount): Promise<void> {\n      await db.insert(accounts).values({\n        id: createId(),\n        userId: account.userId,\n        type: account.type,\n        provider: account.provider,\n        providerAccountId: account.providerAccountId,\n        refresh_token: account.refresh_token,\n        access_token: account.access_token,\n        expires_at: account.expires_at,\n        token_type: account.token_type,\n        scope: account.scope,\n        id_token: account.id_token,\n        session_state: account.session_state,\n      });\n    },\n\n    async unlinkAccount({ providerAccountId, provider }: { providerAccountId: string; provider: string }): Promise<void> {\n      await db\n        .delete(accounts)\n        .where(\n          and(\n            eq(accounts.providerAccountId, providerAccountId),\n            eq(accounts.provider, provider)\n          )\n        );\n    },\n\n    async createSession(session: { sessionToken: string; userId: string; expires: Date }): Promise<AdapterSession> {\n      await db.insert(sessions).values({\n        id: createId(),\n        userId: session.userId,\n        sessionToken: session.sessionToken,\n        expires: session.expires,\n      });\n\n      const createdSession = await db\n        .select()\n        .from(sessions)\n        .where(eq(sessions.sessionToken, session.sessionToken))\n        .then((res) => res[0]);\n\n      return createdSession;\n    },\n\n    async getSessionAndUser(sessionToken: string): Promise<{ session: AdapterSession; user: AdapterUser } | null> {\n      const session = await db\n        .select()\n        .from(sessions)\n        .where(eq(sessions.sessionToken, sessionToken))\n        .then((res) => res[0]);\n\n      if (!session) {\n        return null;\n      }\n\n      const user = await db\n        .select()\n        .from(users)\n        .where(eq(users.id, session.userId))\n        .then((res) => res[0]);\n\n      if (!user) {\n        return null;\n      }\n\n      return {\n        session,\n        user,\n      };\n    },\n\n    async updateSession(session: Partial<AdapterSession> & { sessionToken: string }): Promise<AdapterSession | null> {\n      await db\n        .update(sessions)\n        .set({\n          expires: session.expires,\n        })\n        .where(eq(sessions.sessionToken, session.sessionToken));\n\n      const updatedSession = await db\n        .select()\n        .from(sessions)\n        .where(eq(sessions.sessionToken, session.sessionToken))\n        .then((res) => res[0] || null);\n\n      return updatedSession;\n    },\n\n    async deleteSession(sessionToken: string): Promise<void> {\n      await db.delete(sessions).where(eq(sessions.sessionToken, sessionToken));\n    },\n\n    async createVerificationToken(verificationToken: VerificationToken): Promise<VerificationToken> {\n      await db.insert(verificationTokens).values({\n        identifier: verificationToken.identifier,\n        token: verificationToken.token,\n        expires: verificationToken.expires,\n      });\n\n      const token = await db\n        .select()\n        .from(verificationTokens)\n        .where(\n          and(\n            eq(verificationTokens.identifier, verificationToken.identifier),\n            eq(verificationTokens.token, verificationToken.token)\n          )\n        )\n        .then((res) => res[0]);\n\n      return token;\n    },\n\n    async useVerificationToken({ identifier, token }: { identifier: string; token: string }): Promise<VerificationToken | null> {\n      const verificationToken = await db\n        .select()\n        .from(verificationTokens)\n        .where(\n          and(\n            eq(verificationTokens.identifier, identifier),\n            eq(verificationTokens.token, token)\n          )\n        )\n        .then((res) => res[0] || null);\n\n      if (!verificationToken) {\n        return null;\n      }\n\n      await db\n        .delete(verificationTokens)\n        .where(\n          and(\n            eq(verificationTokens.identifier, identifier),\n            eq(verificationTokens.token, token)\n          )\n        );\n\n      return verificationToken;\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/auth/config.ts"],"sourcesContent":["/**\n * @File: src/lib/auth/config.ts\n */\n\nimport type { NextAuthOptions } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport GithubProvider from \"next-auth/providers/github\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport bcrypt from \"bcryptjs\";\nimport { DrizzleAdapter } from \"./drizzle-adapter\";\nimport { db } from \"@/lib/db\";\nimport { users } from \"@/lib/db/schema\";\nimport { eq } from \"drizzle-orm\";\n\nexport const authOptions: NextAuthOptions = {\n  debug: process.env.NODE_ENV === \"development\",\n  secret: process.env.NEXTAUTH_SECRET,\n  adapter: DrizzleAdapter(db),\n  session: {\n    strategy: \"jwt\",\n    maxAge: 30 * 24 * 60 * 60,\n  },\n  providers: [\n    GithubProvider({\n      clientId: process.env.GITHUB_CLIENT_ID || \"\",\n      clientSecret: process.env.GITHUB_CLIENT_SECRET || \"\",\n    }),\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID || \"\",\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET || \"\",\n    }),\n    CredentialsProvider({\n      name: \"credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"email\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        try {\n          if (!credentials?.email || !credentials?.password) {\n            throw new Error(\"Email and password are required\");\n          }\n\n          const user = await db\n            .select()\n            .from(users)\n            .where(eq(users.email, credentials.email))\n            .then((res) => res[0]);\n\n          if (!user) {\n            throw new Error(\"User not found\");\n          }\n\n          if (!user.password) {\n            throw new Error(\"User registered with OAuth\");\n          }\n\n          const isValid = await bcrypt.compare(\n            credentials.password,\n            user.password\n          );\n\n          if (!isValid) {\n            throw new Error(\"Invalid password\");\n          }\n\n          return {\n            id: user.id,\n            email: user.email,\n            name: user.name,\n            image: user.image,\n            role: user.role,\n          };\n        } catch (error) {\n          console.error(\"Authorization error:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      console.log(token, user, \"authOptions\");\n\n      if (user) {\n        token.id = user.id;\n        token.role = user.role;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token?.id) session.user.id = token.id;\n      if (token?.role) session.user.role = token.role;\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/login\",\n    error: \"/login\",\n  },\n};\n"],"names":[],"mappings":"AAAA;;CAEC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,cAA+B;IAC1C,OAAO,oDAAyB;IAChC,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,SAAS,CAAA,GAAA,0IAAA,CAAA,iBAAc,AAAD,EAAE,2HAAA,CAAA,KAAE;IAC1B,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB,IAAI;YAC1C,cAAc,QAAQ,GAAG,CAAC,oBAAoB,IAAI;QACpD;QACA,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB,IAAI;YAC1C,cAAc,QAAQ,GAAG,CAAC,oBAAoB,IAAI;QACpD;QACA,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI;oBACF,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;wBACjD,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,OAAO,MAAM,2HAAA,CAAA,KAAE,CAClB,MAAM,GACN,IAAI,CAAC,4HAAA,CAAA,QAAK,EACV,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,4HAAA,CAAA,QAAK,CAAC,KAAK,EAAE,YAAY,KAAK,GACvC,IAAI,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE;oBAEvB,IAAI,CAAC,MAAM;wBACT,MAAM,IAAI,MAAM;oBAClB;oBAEA,IAAI,CAAC,KAAK,QAAQ,EAAE;wBAClB,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAClC,YAAY,QAAQ,EACpB,KAAK,QAAQ;oBAGf,IAAI,CAAC,SAAS;wBACZ,MAAM,IAAI,MAAM;oBAClB;oBAEA,OAAO;wBACL,IAAI,KAAK,EAAE;wBACX,OAAO,KAAK,KAAK;wBACjB,MAAM,KAAK,IAAI;wBACf,OAAO,KAAK,KAAK;wBACjB,MAAM,KAAK,IAAI;oBACjB;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,wBAAwB;oBACtC,OAAO;gBACT;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,QAAQ,GAAG,CAAC,OAAO,MAAM;YAEzB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,IAAI,GAAG,KAAK,IAAI;YACxB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YACzC,IAAI,OAAO,MAAM,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC/C,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;QACR,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["/**\n * @File: src/app/api/auth/[...nextauth]/route.ts\n */\n\nimport NextAuth from \"next-auth\";\nimport { authOptions } from \"@/lib/auth/config\";\n\nconst handler = NextAuth(authOptions);\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":"AAAA;;CAEC;;;;AAED;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,8HAAA,CAAA,cAAW","debugId":null}}]
}