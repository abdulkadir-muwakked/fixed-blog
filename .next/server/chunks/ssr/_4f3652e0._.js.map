{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/dashboard-nav.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard-nav.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard-nav.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/dashboard-nav.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard-nav.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard-nav.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/dashboard-shell.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\n\ninterface DashboardShellProps {\n  children: ReactNode;\n}\n\nexport default function DashboardShell({ children }: DashboardShellProps) {\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <div className=\"container flex-1 items-start md:grid md:grid-cols-[220px_minmax(0,1fr)] md:gap-6 lg:grid-cols-[240px_minmax(0,1fr)] lg:gap-10\">\n        {children}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMe,SAAS,eAAe,EAAE,QAAQ,EAAuB;IACtE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/dashboard-header.tsx"],"sourcesContent":["interface DashboardHeaderProps {\n  heading: string;\n  text?: string;\n  children?: React.ReactNode;\n}\n\nexport default function DashboardHeader({\n  heading,\n  text,\n  children,\n}: DashboardHeaderProps) {\n  return (\n    <div className=\"flex items-center justify-between px-2\">\n      <div className=\"grid gap-1\">\n        <h1 className=\"font-heading text-3xl md:text-4xl font-bold\">{heading}</h1>\n        {text && <p className=\"text-muted-foreground\">{text}</p>}\n      </div>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAMe,SAAS,gBAAgB,EACtC,OAAO,EACP,IAAI,EACJ,QAAQ,EACa;IACrB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA+C;;;;;;oBAC5D,sBAAQ,8OAAC;wBAAE,WAAU;kCAAyB;;;;;;;;;;;;YAEhD;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/post-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/post-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/post-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/dashboard/post-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/post-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/post-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/lib/db/schema.ts"],"sourcesContent":["/**\n * @File: src/lib/db/schema.ts\n */\n\n// Prisma schema definitions are now managed in the `prisma/schema.prisma` file.\n// Removed Drizzle-based schema definitions and relationships.\n"],"names":[],"mappings":"AAAA;;CAEC,GAED,gFAAgF;AAChF,8DAA8D","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Desktop/fixed-blog%20-%20Copy/src/app/dashboard/posts/%5Bid%5D/edit/page.tsx"],"sourcesContent":["import { getServerSession } from \"next-auth\";\nimport { redirect } from \"next/navigation\";\nimport { authOptions } from \"@/lib/auth/config\";\nimport DashboardNav from \"@/components/dashboard/dashboard-nav\";\nimport DashboardShell from \"@/components/dashboard/dashboard-shell\";\nimport DashboardHeader from \"@/components/dashboard/dashboard-header\";\nimport PostForm from \"@/components/dashboard/post-form\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { db } from \"@/lib/db\";\nimport { categories, posts } from \"@/lib/db/schema\";\nimport { eq } from \"drizzle-orm\";\nimport { InferModel } from \"drizzle-orm\";\nimport { categories as categoriesTable } from \"@/lib/db/schema\";\n\ninterface EditPostPageProps {\n  params: {\n    id: string;\n  };\n}\n\nexport default async function EditPostPage({ params }: EditPostPageProps) {\n  const session = await getServerSession(authOptions);\n\n  if (!session) {\n    redirect(\"/login?callbackUrl=/dashboard/posts\");\n  }\n\n  // Define the correct type for categories\n  const categories: InferModel<typeof categoriesTable>[] = await db\n    .select({\n      id: categoriesTable.id,\n      name: categoriesTable.name,\n      slug: categoriesTable.slug,\n      description: categoriesTable.description,\n      createdAt: categoriesTable.createdAt,\n      updatedAt: categoriesTable.updatedAt,\n    })\n    .from(categoriesTable);\n\n  // Adjust the post query to exclude `categoryId` if it doesn't exist in the schema\n  const post = await db\n    .select({\n      id: posts.id,\n      title: posts.title,\n      content: posts.content,\n      excerpt: posts.excerpt ?? \"\", // Ensure excerpt is a string\n      slug: posts.slug,\n      status: posts.status,\n      publishedAt: posts.publishedAt,\n    })\n    .from(posts)\n    .where(eq(posts.id, params.id))\n    .then((res) => res[0]);\n\n  if (!post) {\n    redirect(\"/dashboard/posts\");\n  }\n\n  // Ensure `excerpt` is always a string before passing to PostForm\n  const formattedPost = {\n    ...post,\n    excerpt: post.excerpt ?? \"\", // Default to an empty string if null\n  };\n\n  // Ensure `excerpt` is always a string in `mappedPost`\n  const mappedPost = {\n    ...post,\n    status: post.status === \"ARCHIVED\" ? \"DRAFT\" : post.status, // Map ARCHIVED to DRAFT\n    excerpt: post.excerpt ?? \"\", // Default to an empty string if null\n  };\n\n  return (\n    <DashboardShell>\n      <DashboardNav />\n      <div className=\"flex-1 space-y-4 p-8 pt-6\">\n        <DashboardHeader\n          heading=\"Edit Post\"\n          text=\"Make changes to your post and update it\"\n        />\n\n        <div className=\"grid gap-4\">\n          <PostForm post={mappedPost} categories={categories} />\n        </div>\n\n        <Toaster />\n      </div>\n    </DashboardShell>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAUe,eAAe,aAAa,EAAE,MAAM,EAAqB;IACtE,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,4HAAA,CAAA,cAAW;IAElD,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,yCAAyC;IACzC,MAAM,aAAmD,MAAM,yHAAA,CAAA,KAAE,CAC9D,MAAM,CAAC;QACN,IAAI,0HAAA,CAAA,aAAe,CAAC,EAAE;QACtB,MAAM,0HAAA,CAAA,aAAe,CAAC,IAAI;QAC1B,MAAM,0HAAA,CAAA,aAAe,CAAC,IAAI;QAC1B,aAAa,0HAAA,CAAA,aAAe,CAAC,WAAW;QACxC,WAAW,0HAAA,CAAA,aAAe,CAAC,SAAS;QACpC,WAAW,0HAAA,CAAA,aAAe,CAAC,SAAS;IACtC,GACC,IAAI,CAAC,0HAAA,CAAA,aAAe;IAEvB,kFAAkF;IAClF,MAAM,OAAO,MAAM,yHAAA,CAAA,KAAE,CAClB,MAAM,CAAC;QACN,IAAI,0HAAA,CAAA,QAAK,CAAC,EAAE;QACZ,OAAO,0HAAA,CAAA,QAAK,CAAC,KAAK;QAClB,SAAS,0HAAA,CAAA,QAAK,CAAC,OAAO;QACtB,SAAS,0HAAA,CAAA,QAAK,CAAC,OAAO,IAAI;QAC1B,MAAM,0HAAA,CAAA,QAAK,CAAC,IAAI;QAChB,QAAQ,0HAAA,CAAA,QAAK,CAAC,MAAM;QACpB,aAAa,0HAAA,CAAA,QAAK,CAAC,WAAW;IAChC,GACC,IAAI,CAAC,0HAAA,CAAA,QAAK,EACV,KAAK,CAAC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,0HAAA,CAAA,QAAK,CAAC,EAAE,EAAE,OAAO,EAAE,GAC5B,IAAI,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE;IAEvB,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,iEAAiE;IACjE,MAAM,gBAAgB;QACpB,GAAG,IAAI;QACP,SAAS,KAAK,OAAO,IAAI;IAC3B;IAEA,sDAAsD;IACtD,MAAM,aAAa;QACjB,GAAG,IAAI;QACP,QAAQ,KAAK,MAAM,KAAK,aAAa,UAAU,KAAK,MAAM;QAC1D,SAAS,KAAK,OAAO,IAAI;IAC3B;IAEA,qBACE,8OAAC,qJAAA,CAAA,UAAc;;0BACb,8OAAC,mJAAA,CAAA,UAAY;;;;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,sJAAA,CAAA,UAAe;wBACd,SAAQ;wBACR,MAAK;;;;;;kCAGP,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,+IAAA,CAAA,UAAQ;4BAAC,MAAM;4BAAY,YAAY;;;;;;;;;;;kCAG1C,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;AAIhB","debugId":null}}]
}